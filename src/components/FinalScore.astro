---
interface Props {
  score: number;
  maxScore: number;
  color: string;
  textColor?: string;
}

const {
  score,
  maxScore,
  color,
  textColor = "var(--color-white)",
} = Astro.props;

const percentage = Math.round((score / maxScore) * 100);

const lg = () => {
  // 101+: A+ / 4.0
  if (percentage >= 101) {
    return ["A+", 4.0];
  }
  // 93-100: A / 4.0
  if (percentage >= 93) {
    return ["A", 4.0];
  }
  // 90-92: A- / 3.7
  if (percentage >= 90) {
    return ["A-", 3.7];
  }
  // 87-89: B+ / 3.3
  if (percentage >= 87) {
    return ["B+", 3.3];
  }
  // 83-86: B / 3
  if (percentage >= 83) {
    return ["B", 3];
  }
  // 80-82: B- / 2.7
  if (percentage >= 80) {
    return ["B-", 2.7];
  }
  // 77-79: C+ / 2.3
  if (percentage >= 77) {
    return ["C+", 2.3];
  }
  // 73-76: C / 2
  if (percentage >= 73) {
    return ["C", 2];
  }
  // 70-72: C- / 1.7
  if (percentage >= 70) {
    return ["C-", 1.7];
  }
  // 67-69: D+ / 1.3
  if (percentage >= 67) {
    return ["D+", 1.3];
  }
  // 63-66: D / 1
  if (percentage >= 63) {
    return ["D", 1];
  }
  // 60-62: D- / 0.7
  if (percentage >= 60) {
    return ["D-", 0.7];
  }

  // <60: F / 0
  return ["F", 0];
};
---

<div
  class="border-2 border-white rounded text-white p-4 rounded-2xl h-fit sm:flex sm:items-center sm:justify-between"
  style={`background-color: ${color}; color: ${textColor}`}
  id="final-score"
>
  <h2 class="font-bold text-4xl">Final Score</h2>
  <div class="flex gap-4 items-center">
    <p>{percentage}% â€¢ {score}/{maxScore}</p>
    <h3 class="text-3xl font-bold" title={`${lg()[1]}`}>{lg()[0]}</h3>
  </div>
</div>
